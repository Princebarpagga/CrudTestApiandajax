<button type="button" class="btn btn-outline-primary" id="addStudentBtn" data-toggle="modal" data-target="#addStudentModal">
    Add Student
</button>

<div class="modal fade" id="addStudentModal" tabindex="-1" aria-labelledby="addStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addStudentModalLabel">Add New Student</h5>
            </div>
            <div class="modal-body">

                <form id="addStudentForm">
                    <div class="form-group">
                        <label for="firstName">First Name</label>
                        <input type="text" class="form-control" id="firstName" name="FirstName">
                        <span class="text-danger" id="FirstNameValidation"></span>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name</label>
                        <input type="text" class="form-control" id="lastName" name="LastName">
                        <span class="text-danger" id="lastNameValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="depId">Department</label>
                        <select class="form-select" id="depId" name="depId">
                            <option value="">Select Department</option>
                        </select>
                        <span class="text-danger" id="DepartmentIdValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="qualifId">Qualification</label>
                        <select class="form-select" id="qualifId" name="qualifId">
                            <option value="">Select Qualification</option>
                        </select>
                        <span class="text-danger" id="QualificationIdValidation"></span>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Percentage(%)</label>
                        <input type="text" class="form-control" id="percentage" onkeypress="return isNumberKey(event)" name="Percentage">
                        <span class="text-danger" id="PercentageValidation"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveStudentBtn">Save </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editStudentModal" tabindex="-1" aria-labelledby="editStudentModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editStudentModalLabel">Update  Student</h5>
            </div>
            <div class="modal-body">

                <form id="editStudentForm">
                    <div class="form-group">
                        <label for="fName">First Name</label>
                        <input type="text" class="form-control" id="fName" name="FirstName">
                        <span class="text-danger" id="FNameValidation"></span>
                    </div>
                    <div class="form-group">
                        <label for="lastName">Last Name</label>
                        <input type="text" class="form-control" id="lName" name="LastName">
                        <span class="text-danger" id="lNameValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="depId">Department</label>
                        <select class="form-select" id="deptId" name="depId">
                            <option value="">Select Department</option>
                        </select>
                        <span class="text-danger" id="DeptIdValidation"></span>
                    </div>
                    <div class="mb-3">
                        <label class="form-label" for="qualifId">Qualification</label>
                        <select class="form-select" id="qualifiId" name="QualifId">
                            <option value="">Select Qualification</option>
                        </select>
                        <span class="text-danger" id="QualifIdValidation"></span>
                    </div>
                    <div class="form-group">
                        <label for="percentage">Percentage(%)</label>
                        <input type="text" class="form-control" id="percen" onkeypress="return isNumberKey(event)" name="Percentage">
                        <span class="text-danger" id="PercentValidation"></span>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="editStudentBtn">Update </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<h1 class="text-center">Student List</h1>
<div class="col-2">
    <select class="form-select" id="filterDropdown" style="height:-2px;margin:15.2px;">
        <option value="">Filter</option>
        <option value="Departments">Departments</option>
        <option value="Qualification">Qualification</option>
    </select>
    <select disabled class="form-select" id="isActive" style="height:-2px;margin:15.2px;">
        <option value="">Select</option>
    </select>
</div>
@* <div class="col-2"  >
    <select class="form-select" id="filterDropdown" style="height:-2px;margin:15.2px;" onchange="isActiveFilter()">
        <option value="">Filter </option>
        <option value="">Departments </option>
        <option value="">Qualification </option>
    </select>
    <select disabled class="form-select " id="isActive" style="height:-2px;margin:15.2px;">
        <option value="">Select</option>
    </select>
</div> *@
@* <div class="col-2" style="height:0;margin:15.2px;">
    <input type="text" id="searchString" placeholder="Search FirstName...." class="form-control" name="searchString" />
</div> *@
<div class="col-2" style="height:0;margin:15.2px;">
    <input type="text" class="form-control" id="searchFirstName" placeholder="Search FirstName....">
</div>
<div class="container mt-5">
    <div id="studentTableContainer">
        <table id="studentTable" class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Departments</th>
                    <th>Qualification</th>
                    <th>Percentage %</th>
                    <th>Edit</th>
                    <th>Delete</th>
                </tr>
            </thead>
            <tbody id="studentTableBody">
            </tbody>
        </table>
       @*  <p id="noDataMessage" class="alert alert-warning" style="display: none;">Data not found</p> *@
    </div>
</div>


<div id="paginationContainer" class="text-center mt-3">
</div>
@section Scripts {
    <script>
        $(document).ready(function () {
            $('#searchFirstName').on('keyup', function () {
                var searchTerm = $(this).val().trim().toLowerCase();
                filterTable(searchTerm);
                fetchData(1);
            });
            
            // $('#searchFirstName').keyup(function () {
            //     fetchData(1); 
            // });
            fetchData(1);
            populateDropdowns();

            $('#addStudentBtn').click(function () {
                $('#addStudentModal').modal('show');
            });
        });
        function filterTable(searchTerm) {
            debugger
            var rows = $('#studentTableBody').find('tr');
            rows.each(function () {
                var firstName = $(this).find('td:first').text().trim().toLowerCase();
                console.log(firstName);
                if (firstName.includes(searchTerm)) {
                    $(this).show();
                    found = true;
                } else {
                    $(this).hide();
                }
            });


        }
        function fetchDepartments() {
            $.ajax({
                url: 'https://localhost:44324/api/Student/DepartmentsName',
                method: 'GET',
                success: function (departments) {
                    var isActiveDropdown = $('#isActive');
                    isActiveDropdown.empty().append($('<option></option>').attr('value', '').text('Select'));

                    $.each(departments, function (index, department) {
                        isActiveDropdown.append($('<option></option>').attr('value', department.depId).text(department.departmentName));
                    });

                    //isActiveDropdown.attr('id', 'departmentIdDropdown');
                   // isActiveDropdown.prop('id', 'departmentIdDropdown');                    
                    isActiveDropdown.prop('disabled', false);
                   // isActiveFilter();
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

       
        function fetchQualifications() {
            $.ajax({
                url: 'https://localhost:44324/api/Student/QualificationsName',
                method: 'GET',
                success: function (qualifications) {
                    var isActiveDropdown = $('#isActive');
                    isActiveDropdown.empty().append($('<option></option>').attr('value', '').text('Select'));

                    $.each(qualifications, function (index, qualification) {
                        isActiveDropdown.append($('<option></option>').attr('value', qualification.qualifId).text(qualification.qualificationName));
                    });

                   
                    isActiveDropdown.prop('disabled', false);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

       
        function fetchStudentsList() {
            debugger
            var filterValue = $('#filterDropdown').val();
            var qualificationId = null;
            var departmentId = null;
            var searchTerm = $('#searchFirstName').val().trim();
            if (filterValue == "Departments"){
                departmentId = $('#isActive').val();
                qualificationId = null;
            }else{
                qualificationId = $('#isActive').val();
                departmentId = null;
            }
            // var departmentId = $('#isActive').val();
            // var qualificationId = $('#isActive').val();
           
            $.ajax({

               
                url: 'https://localhost:44324/api/Student/StudentsListPage',
                method: 'GET',
                data: {
                    page: 1,
                    pageSize: 10,
                    depId: departmentId ,/* filterValue === 'Departments' ? departmentId : null, */
                    qualifId: qualificationId,/*  filterValue === 'Qualification' ? qualificationId : null, */
                    searchTerm: searchTerm
                },
                success: function (response) {
                    displayData(response);
                    updatePaginationButtons(response);
                    console.log(response);
                   
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }

        function isActiveFilter() {
            var filterValue = $('#filterDropdown').val();

            if (filterValue === 'Departments') {
                $('#departmentIdDropdown').prop('disabled', false);
                $('#qualificationIdDropdown').prop('disabled', true);
                fetchDepartments();
            } else if (filterValue === 'Qualification') {
                $('#departmentIdDropdown').prop('disabled', true);
                $('#qualificationIdDropdown').prop('disabled', false);
                fetchQualifications();
            } else {
               
                $('#departmentIdDropdown').prop('disabled', true);
                $('#qualificationIdDropdown').prop('disabled', true);
            }
        }

        // function isActiveFilter() {
        //     debugger
        //     var selectedFilter = $('#filterDropdown').val();
        //     var isActiveDropdown = $('#isActive');

        //     if (selectedFilter === 'Departments') {
        //       //  isActiveDropdown.prop('id', 'departmentIdDropdown');
        //         fetchDepartments();
        //     } else if (selectedFilter === 'Qualification') {
        //        // isActiveDropdown.prop('id', 'qualificationIdDropdown');
        //         fetchQualifications();
        //     } else {
        //         isActiveDropdown.prop('id', 'isActive').prop('disabled', true).empty().append($('<option></option>').attr('value', '').text('Select'));
        //        // isActiveDropdown.prop('disabled', true).empty().append($('<option></option>').attr('value', '').text('Select'));
        //     }
        // }

       
        $('#filterDropdown').change(function () {
            isActiveFilter();
        });

      
        $('#isActive').change(function () {
            fetchStudentsList();
        });
               
        
        var currentPage = 1;
        var pageSize = 5;
        function fetchData(page) {
            var searchQuery = $('#searchFirstName').val();
            var departmentId = $('#departmentIdDropdown').val();
            var qualificationId = $('#qualificationIdDropdown').val();
            // var departmentId = $('#isActive').val();
            // var qualificationId = $('#isActive').val();
            debugger
            $.ajax({
                url: `https://localhost:44324/api/Student/StudentsListPage?page=${page}&pageSize=${pageSize}`,

                method: 'GET',
                data: {
                    depId: departmentId,
                    qualifId: qualificationId,
                    firstName: searchQuery 
                },
                success: function (response) {
                    displayData(response);
                    updatePaginationButtons(response);
                },
                error: function (xhr, status, error) {
                    console.error(error);
                }
            });
        }


        function displayData(data) {
            debugger
            var tbody = $('#studentTableBody');
            tbody.empty();
            if (data && data.data && Array.isArray(data.data)) {
            data.data.forEach(function (student) {
                var row = $('<tr>');
                row.append($('<td>').text(student.firstName));
                row.append($('<td>').text(student.lastName));
                row.append($('<td>').text(student.departmentName));
                row.append($('<td>').text(student.qualificationsName));
                row.append($('<td>').text(student.percentage.toFixed(2)));
                var editButton = $('<button class="btn btn-outline-primary">').text('Edit').addClass('edit-btn').data('student-id', student.studentId);
                row.append($('<td>').append(editButton));

                var deleteButton = $('<button class="btn btn-outline-danger">').text('Delete').addClass('delete-btn').data('student-id', student.studentId);
                row.append($('<td>').append(deleteButton));
                tbody.append(row);
            });
            } else {
               
                tbody.html('<tr><td colspan="7" class="text-center">No data found</td></tr>');
            }
        }
        function updatePaginationButtons(response) {
            var paginationContainer = $('#paginationContainer');
            paginationContainer.empty();
            var pagination = response.dataInfo;

            if (pagination) {
                if (pagination.prev_page != null) {
                    paginationContainer.append(`<button class="btn btn-outline-primary" onclick="fetchData(${pagination.prev_page})">Previous</button>`);
                    paginationContainer.append(' ');
                } else {
                    paginationContainer.append(`<button class="btn btn-outline-primary" disabled>Previous</button>`);
                    paginationContainer.append(' ');
                }

                for (var i = 1; i <= pagination.total_pages; i++) {
                    if (i === pagination.current_page) {
                        paginationContainer.append(`<button class="btn btn-outline-primary active">${i}</button>`);
                        paginationContainer.append(' ');
                    } else {
                        paginationContainer.append(`<button class="btn btn-outline-primary" onclick="fetchData(${i})">${i}</button>`);
                        paginationContainer.append(' ');
                    }
                }

                if (pagination.next_page != null) {
                    paginationContainer.append(`<button class="btn btn-outline-primary" onclick="fetchData(${pagination.next_page})">Next</button>`);
                } else {
                    paginationContainer.append(`<button class="btn btn-outline-primary" disabled>Next</button>`);
                }
            }
        }
        fetchData(currentPage);




        
        $(document).ready(function () {
            $('#editStudentModal').on('hidden.bs.modal', function () {
                $(this).find('form')[0].reset();
                location.reload();
            });

            $('#addStudentModal').on('hidden.bs.modal', function () {
                $(this).find('form')[0].reset();
                $('#addStudentModalLabel').text('Save Student');
                $('#saveStudentBtn').text('Save');
            });


            $('#studentTableBody').on('click', 'button.edit-btn', function () {
                debugger
                var studentId = $(this).data('student-id');
                $.ajax({
                    url: 'https://localhost:44324/api/Student/Students/' + studentId,
                    method: 'GET',
                    success: function (response) {
                        $('#fName').val(response.firstName);
                        $('#lName').val(response.lastName);
                        $('#deptId').val(response.depId);
                        $('#qualifiId').val(response.qualifId);
                        $('#percen').val(response.percentage.toFixed(2));
                        //  $('#addStudentModalLabel').text('Update Student');
                        //  $('#editStudentBtn').text('Update').data('student-id', studentId);
                        $('#editStudentBtn').data('student-id', studentId);
                        $('#editStudentModal').modal('show');
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });


            $('#studentTableBody').on('click', 'button.delete-btn', function () {
                var confirmed = confirm('Are you sure you want to delete this student?');
                if (confirmed) {
                    debugger
                    var studentId = $(this).data('student-id');
                    console.log("Delete button clicked for student with ID:", studentId);
                    $.ajax({
                        url: 'https://localhost:44324/api/Student/Delete' + studentId,
                        method: 'DELETE',
                        success: function (response) {
                            toastr.success('Student deleted successfully.');
                            $(this).closest('tr').remove();
                            location.reload();
                            console.log('Student deleted successfully.');
                        },
                        error: function (xhr, status, error) {
                            console.error(error);
                        }
                    });
                }
            });
        });


        $("#editStudentBtn").click(function () {
            debugger
            var form = $('#editStudentForm');
            $('.text-danger').text('');
            var firstName = $('#fName').val();
            if (firstName.trim() === '') {
                $('#FNameValidation').text('Firs Name is required.');
                return;
            } else if (!/^[A-Z][a-zA-Z]*$/.test(firstName)) {
                $('#FNameValidation').text('Student Name must start with a capital letter and contain only letters.');
                return;
            }
            var lastName = $('#lName').val();
            if (lastName.trim() === '') {
                $('#lNameValidation').text('Last Name is required.');
                return;
            } else if (!/^[A-Z][a-zA-Z]*$/.test(lastName)) {
                $('#lNameValidation').text('Student Last Name must start with a capital letter and contain only letters.');
                return;
            }
            var departmentId = $('#deptId').val();
            if (departmentId.trim() === '') {
                $('#DeptIdValidation').text('Department is required.');
                return;
            }
            var qualification = $('#qualifiId').val();
            if (qualification.trim() === '') {
                $('#QualifIdValidation').text('Qualification is required.');
                return;
            }
            var percentage = $('#percen').val();
            if (percentage.trim() === '') {
                $('#PercentValidation').text('Percentage is required.');
                return;
            } else if (!/^\d/.test(percentage)) {
                $('#PercentageValidation').text('Percentage must start with a number.');
                return;
            }
            var studentId = $(this).data('student-id');
            var formData = {
                StudentId: studentId,
                FirstName: $("#fName").val(),
                LastName: $("#lName").val(),
                DepId: $("#deptId").val(),
                QualifId: $("#qualifiId").val(),
                Percentage: $("#percen").val()

            };

            $.ajax({
                type: "POST",
                url: 'https://localhost:44324/api/Student/Update' + studentId,
                data: JSON.stringify(formData),
                contentType: "application/json",
                success: function (response) {
                    $('#editStudentModal').modal('hide');
                    location.reload();
                    console.log("Student Update successfully:", response);
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                }
            });
        });
        

        $("#saveStudentBtn").click(function () {
            debugger
            var form = $('#addStudentForm');
            $('.text-danger').text('');
            var firstName = $('#firstName').val();
            if (firstName.trim() === '') {
                $('#FirstNameValidation').text('Firs Name is required.');
                return;
            } else if (!/^[A-Z][a-zA-Z]*$/.test(firstName)) {
                $('#FirstNameValidation').text('Student Name must start with a capital letter and contain only letters.');
                return;
            }
            var lastName = $('#lastName').val();
            if (lastName.trim() === '') {
                $('#lastNameValidation').text('Last Name is required.');
                return;
            } else if (!/^[A-Z][a-zA-Z]*$/.test(lastName)) {
                $('#lastNameValidation').text('Student Last Name must start with a capital letter and contain only letters.');
                return;
            }
            var departmentId = $('#depId').val();
            if (departmentId.trim() === '') {
                $('#DepartmentIdValidation').text('Department is required.');
                return;
            }
            var qualification = $('#qualifId').val();
            if (qualification.trim() === '') {
                $('#QualificationIdValidation').text('Qualification is required.');
                return;
            }
            var percentage = $('#percentage').val();
            if (percentage.trim() === '') {
                $('#PercentageValidation').text('Percentage is required.');
                return;
            } else if (!/^\d/.test(percentage)) {
                $('#PercentageValidation').text('Percentage must start with a number.');
                return;
            }

            var formData = {
                FirstName: $("#firstName").val(),
                LastName: $("#lastName").val(),
                DepId: $("#depId").val(),
                QualifId: $("#qualifId").val(),
                Percentage: $("#percentage").val()

            };
            if (!formData.FirstName) {
                $('#firstNameError').show();
            } else {
                $('#firstNameError').hide();
            }

            $.ajax({
                type: "POST",
                url: "https://localhost:44324/api/Student/Create",
                data: JSON.stringify(formData),
                contentType: "application/json",
                success: function (response) {
                    $('#addStudentModal').modal('hide');
                    location.reload();
                    toastr.success('Student Add successfully.', response);
                    console.log("Student created successfully:", response);
                },
                error: function (xhr, status, error) {
                    console.error("Error:", error);
                }
            });
        });
        function populateDropdowns() {
            $.ajax({
                url: 'https://localhost:44324/api/Student/DepartmentsName',
                type: 'GET',
                success: function (departments) {
                    var departmentDropdown = $('#depId');
                    $.each(departments, function (index, department) {
                        departmentDropdown.append($('<option></option>').attr('value', department.depId).text(department.departmentName));
                    });
                }
            });
          
            $.ajax({
                url: 'https://localhost:44324/api/Student/DepartmentsName',
                type: 'GET',
                success: function (departments) {
                    var departmentDropdown = $('#deptId');
                    $.each(departments, function (index, department) {
                        departmentDropdown.append($('<option></option>').attr('value', department.depId).text(department.departmentName));
                    });
                }
            });
            $.ajax({
                url: 'https://localhost:44324/api/Student/QualificationsName',
                type: 'GET',
                success: function (qualifications) {
                    var qualificationDropdown = $('#qualifId');
                    $.each(qualifications, function (index, qualification) {
                        qualificationDropdown.append($('<option></option>').attr('value', qualification.qualifId).text(qualification.qualificationName));
                    });
                }
            });
         
            $.ajax({
                url: 'https://localhost:44324/api/Student/QualificationsName',
                type: 'GET',
                success: function (qualifications) {
                    var qualificationDropdown = $('#qualifiId');
                    $.each(qualifications, function (index, qualification) {
                        qualificationDropdown.append($('<option></option>').attr('value', qualification.qualifId).text(qualification.qualificationName));
                    });
                }
            });
        }
    

        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode != 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {
                return false;
            }
            return true;
        }
    </script>
}

